{"version":3,"sources":["Pages/Graphic/ChartJs.js","Pages/Graphic/Graphic.js","media/Eclipse-1s-200px.svg","Components/Pagination/Pagination.js","api/SWAPI.js","api/APIUtils.js","Hook/usePeople.js"],"names":["ChartJs","_ref","height","type","labels","datasets","options","data","title","display","text","fontSize","scales","yAxes","gridLines","xAxes","maintainAspectRatio","useEffect","ctx","document","getElementById","getContext","chart","Chart","destroy","react_default","a","createElement","className","id","Graphic","_useState","useState","_useState2","Object","slicedToArray","page","setPage","_usePeople","usePeople","concat","_usePeople2","isLoading","error","people","count","parsingPeople","reduce","hash","mass","name","validMass","match","replace","validHeight","toConsumableArray","parsingDataToChart","label","bckColor","array","key","backgroundColor","map","item","arrayDataSets","names","Fragment","Pagination","activePage","pageSize","Eclipse_1s_200px","Pages_Graphic_ChartJs","__webpack_require__","d","__webpack_exports__","ForwardRef","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_extends","assign","target","i","arguments","length","source","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","_ref2","ng-attr-d","ng-attr-fill","stroke","fill","transform","attributeName","calcMode","values","keyTimes","dur","begin","repeatCount","SvgEclipse1S200Px","svgRef","props","width","viewBox","preserveAspectRatio","style","background","ref","forwardRef","p","React","memo","react__WEBPACK_IMPORTED_MODULE_1___default","_home_olegann_React_spawi2_0_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__","Array","Math","ceil","index","onClick","getResource","asyncToGenerator","regenerator_default","mark","_callee","query","res","wrap","_context","prev","next","axios","sent","abrupt","t0","console","stop","_x","peopleQuery","setError","_useState3","_useState4","setIsLoading","_useState5","_useState6","setCount","_useState7","_useState8","setPeople","then","results","response","status","message"],"mappings":"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","file":"static/js/5.e624064f.chunk.js","sourcesContent":["import React, { useEffect} from 'react' \nimport Chart from 'chart.js' \nimport {PropTypes as T} from 'prop-types'\nimport './ChartJs.scss'\n \nconst ChartJs = ({height, type, labels, datasets}) => {  \n    \n    const options = {\n        type: type,\n        data: {\n            labels: labels,\n            datasets: datasets\n        },\n        options: { \n            title: {\n                display: true,\n                text: 'SWAPI Chart.js',\n                fontSize: 20\n            },\n            scales: {\n                yAxes: [{ \n                    gridLines: {\n                    display: false  \n                    }\n                }],\n                xAxes: [{\n                    gridLines: {\n                    display: false\n                    }\n                }]\n            }, \n            maintainAspectRatio: false\n        }\n    }\n    \n    useEffect(() => {  \n       const canvas = document.getElementById('canvas-1')\n       const ctx = canvas.getContext('2d') \n       const chart = new Chart(ctx, options) \n       return () => ( \n          chart.destroy() \n       )\n    }, [datasets])\n \n    return (\n        <div className='wrapper-chart'>\n            <canvas height={height} id='canvas-1'/>\n        </div>\n    )\n\n}\n\nChartJs.propTypes = {\n    height: T.string,\n    type: T.string,\n    labels: T.arrayOf(T.string),\n    datasets: T.arrayOf(T.shape({\n        label: T.string,\n        backgroundColor: T.string,\n        data: T.arrayOf(T.string)\n    }))\n}\n\nexport default ChartJs","import React, {useState} from 'react'  \nimport { usePeople } from '../../Hook/usePeople';\nimport { ReactComponent as Logo } from '../../media/Eclipse-1s-200px.svg'; \n\nimport Pagination from '../../Components/Pagination/Pagination'\nimport ChartJs from './ChartJs';\n \nconst Graphic = () => {\n    const [page, setPage] = useState(1) \n    const [isLoading,error,people,count] = usePeople(`people/?page=${page}`)\n\n    const parsingPeople = people ? \n        people.reduce((hash,{mass,height,name})=> {\n            const validMass = mass.match(/\\d/) ? mass.replace(',','') : '0'\n            const validHeight = height.match(/\\d/) ? height.replace(',','') : '0'\n            return [\n                ...hash, \n                {validMass,validHeight,name}\n            ]\n        },[]) :\n        [] \n\n    const parsingDataToChart = (label,bckColor,array,key) => {\n        return ({\n            label: label,\n            backgroundColor: bckColor,\n            data: array.map(item => item[key])\n        })\n    }\n\n    const arrayDataSets = [\n        parsingDataToChart('Character mass', 'rgba(52, 152, 219, 0.75)', parsingPeople, 'validMass'),\n        parsingDataToChart('Character growth', 'rgba(231, 76, 60, 0.75)', parsingPeople, 'validHeight')\n    ]\n\n    const names = parsingPeople.map(item => item.name)  \n    const pageSize = 10 \n    \n    return (\n        <React.Fragment>   \n            <Pagination \n                setPage={setPage} \n                count={count} \n                activePage={page}\n                pageSize={pageSize}\n            /> \n            {isLoading ? \n                <Logo/> :\n                <ChartJs \n                    height={'600'}\n                    type={'line'} \n                    labels={names} \n                    datasets={arrayDataSets}\n                />\n            }\n            {error}\n        </React.Fragment>\n    )\n\n}\n\nexport default Graphic","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  \"ng-attr-d\": \"{{config.pathCmd}}\",\n  \"ng-attr-fill\": \"{{config.color}}\",\n  stroke: \"none\",\n  d: \"M10 50A40 40 0 0 0 90 50A40 42 0 0 1 10 50\",\n  fill: \"#eca611\",\n  transform: \"rotate(329.857 50 51)\"\n}, React.createElement(\"animateTransform\", {\n  attributeName: \"transform\",\n  type: \"rotate\",\n  calcMode: \"linear\",\n  values: \"0 50 51;360 50 51\",\n  keyTimes: \"0;1\",\n  dur: \"1s\",\n  begin: \"0s\",\n  repeatCount: \"indefinite\"\n}));\n\nvar SvgEclipse1S200Px = function SvgEclipse1S200Px(_ref) {\n  var svgRef = _ref.svgRef,\n      props = _objectWithoutProperties(_ref, [\"svgRef\"]);\n\n  return React.createElement(\"svg\", _extends({\n    width: \"200px\",\n    height: \"200px\",\n    viewBox: \"0 0 100 100\",\n    preserveAspectRatio: \"xMidYMid\",\n    className: \"lds-eclipse\",\n    style: {\n      background: \"none\"\n    },\n    ref: svgRef\n  }, props), _ref2);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return React.createElement(SvgEclipse1S200Px, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/Eclipse-1s-200px.237b2fc0.svg\";\nexport { ForwardRef as ReactComponent };","import React from 'react'\nimport './Pagination.scss'\nimport {PropTypes as T} from 'prop-types'\n\nconst Pagination = ({pageSize, count, activePage, setPage}) => {  \n\n    return ( \n        count ?\n            <div className='wrapper-pagination'>\n                {[...Array(Math.ceil(count / pageSize))]\n                    .map((item,index) => (\n                        <p \n                            key={index}\n                            className={index + 1 === activePage ? 'activePage' : ''} \n                            onClick={() => setPage(index + 1)}\n                        >\n                            {index + 1}\n                        </p>\n                    ))\n                }\n            </div> : \n            null  \n    )\n}\n\nPagination.propTypes = {\n    pageSize: T.number.isRequired,\n    activePage: T.number.isRequired,\n    count: T.number,\n    setPage: T.func\n}\n\nexport default React.memo(Pagination)","import {RESOURCE} from './APIUtils'\nimport axios from 'axios'\n  \nexport const getResource = async (query) => { \n    try {\n        const res = await axios(`${RESOURCE}/${query}`)\n        return res\n    } catch (err) {  \n        console.error(err)\n        return err\n    }\n} ","export const RESOURCE = 'https://swapi.co/api' ","import { useState, useEffect } from 'react';\nimport {getResource} from '../api/SWAPI'\n\nexport const usePeople = peopleQuery => { \n    const [error, setError] = useState(null)\n    const [isLoading, setIsLoading] = useState(true)\n    const [count, setCount] = useState(null)\n    const [people, setPeople] = useState(null)  \n    \n    useEffect(() => { \n        setIsLoading(true) \n        getResource(peopleQuery)\n            .then((res) => { \n                if(res.data) { \n                    let {data} = res  \n                    setIsLoading(null) \n                    setCount(data.count)\n                    setPeople(data.results) \n                } else if(res.response) {\n                    setIsLoading(null)\n                    setError('Error.Error status: ' + res.response.status)\n                } else {\n                    setIsLoading(null)\n                    setError('Error:' + res.message)\n                }\n        })\n    }, [peopleQuery])\n\n    return [isLoading,error,people,count];\n}"],"sourceRoot":""}