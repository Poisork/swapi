{"version":3,"sources":["Components/Header/Header.js","hoc/withSuspence.js","App.js","i18n.js","serviceWorker.js","index.jsx"],"names":["withTranslation","_ref","i18n","_ref$t","t","react_default","a","createElement","className","value","language","onChange","_ref2","target","changeLanguage","map","lang","key","react_router_dom","exact","to","withSuspense","Component","props","react","fallback","Graphic","React","lazy","Promise","all","__webpack_require__","e","then","bind","People","use","LanguageDetector","initReactI18next","init","resources","en","translation","birth_year","created","edited","eye_color","set_lang","ru","debug","lng","fallbackLng","keySeparator","interpolation","escapeValue","ns","defaultNS","_callee","registration","regenerator_default","wrap","_context","prev","next","navigator","serviceWorker","register","sent","console","log","t0","error","stop","ReactDOM","render","es","basename","process","Components_Header_Header","react_router","path","document","getElementById","_serviceWorker","apply","this","arguments","serviceWoker"],"mappings":"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","file":"static/js/main.35771af3.chunk.js","sourcesContent":["import React from 'react'\nimport {NavLink} from 'react-router-dom'\nimport './navigation.scss'\nimport {withTranslation} from 'react-i18next'\nimport T from 'prop-types'\n\nconst Header = ({i18n, t = () => {}}) => {\n  const languages = ['en', 'ru']\n  const handleChange = ({target: {value}}) => {\n    i18n.changeLanguage(value)\n  }\n  return (\n    <header className='header'>\n      <h1>SWAPI</h1>\n      <div>\n        <p>{t('set_lang')}</p>\n        <select value={i18n.language} onChange={handleChange}>\n          {languages.map(lang => (\n            <option key={lang} value={lang}>\n              {lang}\n            </option>\n          ))}\n        </select>\n      </div>\n      <nav className='navigation'>\n        <ul className='navigation-list'>\n          <li>\n            <NavLink exact to='/'>\n              Root\n            </NavLink>{' '}\n          </li>\n          <li>\n            <NavLink to='/people'>People</NavLink>\n          </li>\n          <li>\n            <NavLink to='/graphic'>Graphic</NavLink>\n          </li>\n        </ul>\n      </nav>\n    </header>\n  )\n}\n\nHeader.propTypes = {\n  i18n: T.object,\n  t: T.func,\n}\n\nexport default withTranslation()(Header)\n","import React, {Suspense} from 'react'\n\nexport const withSuspense = Component => {\n  return props => {\n    return (\n      <Suspense fallback={<div>Loading...</div>}>\n        <Component {...props} />\n      </Suspense>\n    )\n  }\n}\n","import React from 'react'\nimport './App.css'\nimport {BrowserRouter as Router, Switch, Route} from 'react-router-dom'\nimport Header from './Components/Header/Header'\nimport {withSuspense} from './hoc/withSuspence'\n\nconst Graphic = React.lazy(() => import('./Pages/Graphic/Graphic'))\nconst People = React.lazy(() => import('./Pages/People/People'))\n\nexport const App = () => {\n  return (\n    <Router basename={process.env.PUBLIC_URL}>\n      <Header />\n      <Switch>\n        <Route exact path='/' render={() => <p>Main page</p>} />\n        <Route path='/people' render={withSuspense(People)} />\n        <Route path='/graphic' render={withSuspense(Graphic)} />\n        <Route render={() => <p>Page not found</p>} />\n      </Switch>\n    </Router>\n  )\n}\n","import i18n from 'i18next'\nimport {initReactI18next} from 'react-i18next'\nimport LanguageDetector from 'i18next-browser-languagedetector'\n\ni18n\n  .use(LanguageDetector)\n  .use(initReactI18next)\n  .init({\n    resources: {\n      en: {\n        translation: {\n          birth_year: 'birth_year',\n          created: 'created',\n          edited: 'edited',\n          eye_color: 'eye_color',\n          set_lang: 'set lang',\n        },\n      },\n      ru: {\n        translation: {\n          birth_year: 'год рождения',\n          created: 'созданно',\n          edited: 'изменено',\n          eye_color: 'цвет глаз',\n          set_lang: 'выбрать язык',\n        },\n      },\n      debug: false,\n      lng: 'en',\n      fallbackLng: false, // use en if detected lng is not available\n      keySeparator: false, // we do not use keys in form messages.welcome\n      interpolation: {\n        escapeValue: false, // react already safes from xss\n      },\n      ns: ['translations'],\n      defaultNS: 'translations',\n    },\n  })\n\nexport default i18n\n","/* eslint-disable no-console */\nexport default async function serviceWorker() {\n  if ('serviceWorker' in navigator) {\n    try {\n      const registration = await navigator.serviceWorker.register('./sw.js')\n      console.log(registration)\n    } catch (e) {\n      console.error(e)\n    }\n  } else {\n    console.log('Текущий браузер не поддерживает service worker-ы')\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport {I18nextProvider} from 'react-i18next'\nimport {App} from './App'\nimport i18n from './i18n'\nimport serviceWoker from './serviceWorker'\n\nReactDOM.render(\n  <I18nextProvider i18n={i18n}>\n    <App />\n  </I18nextProvider>,\n  document.getElementById('root'),\n)\n\nserviceWoker()\n"],"sourceRoot":""}